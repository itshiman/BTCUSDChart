{"version":3,"sources":["components/ChartComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ChartComponent","props","state","fetchedData","options","chart","type","height","title","text","align","xaxis","yaxis","tooltip","enabled","fetch","then","res","json","setState","newSeries","data","this","map","value","x","Date","timestamp","getTime","y","parseFloat","open","max","min","close","className","series","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAoEeA,E,kDAjEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,YAAa,GACbC,QAAS,CACPC,MAAO,CACLC,KAAM,cACNC,OAAQ,KAEVC,MAAO,CACLC,KAAM,oBACNC,MAAO,QAETC,MAAO,CACLL,KAAM,YAERM,MAAO,CACLC,QAAS,CACPC,SAAS,MAnBA,E,qDAyBnB,WAAqB,IAAD,OAClBC,MACE,iIAECC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACL,EAAKE,SAAS,CACZhB,YAAac,S,oBAIrB,WACE,IAAIG,EAAY,CACd,CACEC,KAAMC,KAAKpB,MAAMC,YAAYoB,KAAI,SAACC,GAChC,MAAO,CACLC,EAAG,IAAIC,KAAKF,EAAMG,WAAWC,UAC7BC,EAAG,CACDC,WAAWN,EAAMO,MACjBD,WAAWN,EAAMQ,KACjBF,WAAWN,EAAMS,KACjBH,WAAWN,EAAMU,cAM3B,OACE,qBAAKC,UAAU,cAAf,SACE,cAAC,IAAD,CACE/B,QAASkB,KAAKpB,MAAME,QACpBgC,OAAQhB,EACRd,KAAK,cACLC,OAAQ,Y,GA3DW8B,aCSdC,MARf,WACE,OACE,qBAAKH,UAAU,MAAf,SACE,cAAC,EAAD,OCMSI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7b168386.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Chart from 'react-apexcharts';\nclass ChartComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fetchedData: [],\n      options: {\n        chart: {\n          type: 'candlestick',\n          height: 350,\n        },\n        title: {\n          text: 'CandleStick Chart',\n          align: 'left',\n        },\n        xaxis: {\n          type: 'datetime',\n        },\n        yaxis: {\n          tooltip: {\n            enabled: true,\n          },\n        },\n      },\n    };\n  }\n  componentDidMount() {\n    fetch(\n      'https://api.crosstower.com/api/3/public/candles/BTCUSD?from=2021-07-31T14:00:00.000Z&till=2021-08-03T14:30:00.000Z&limit=1000'\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        this.setState({\n          fetchedData: res,\n        });\n      });\n  }\n  render() {\n    var newSeries = [\n      {\n        data: this.state.fetchedData.map((value) => {\n          return {\n            x: new Date(value.timestamp).getTime(),\n            y: [\n              parseFloat(value.open),\n              parseFloat(value.max),\n              parseFloat(value.min),\n              parseFloat(value.close),\n            ],\n          };\n        }),\n      },\n    ];\n    return (\n      <div className='mixed-chart'>\n        <Chart\n          options={this.state.options}\n          series={newSeries}\n          type='candlestick'\n          height={350}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ChartComponent;\n","import './App.css';\nimport ChartComponent from './components/ChartComponent';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <ChartComponent />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}